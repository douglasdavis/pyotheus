class Registry:
    def __init__(self) -> None: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...
    def encode(self) -> bytes: ...

class Histogram:
    def __init__(
        self, name: str, help: str, buckets: list[float], registry: Registry | None
    ) -> None: ...
    def observe(
        self, labels: dict[str, str] | list[tuple[str, str]], value: float
    ) -> None: ...

class Counter:
    def __init__(self, name: str, help: str, registry: Registry | None) -> None: ...
    def inc(self, lables: dict[str, str] | list[tuple[str, str]]) -> int: ...

def init_tracing(level: str) -> None: ...
def encode_global_registry() -> bytes: ...
